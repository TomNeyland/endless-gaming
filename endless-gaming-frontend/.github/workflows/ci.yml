name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
    paths: 
      - 'endless-gaming-frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main, master ]
    paths: 
      - 'endless-gaming-frontend/**'

env:
  NODE_VERSION: "20.x"

defaults:
  run:
    working-directory: endless-gaming-frontend

jobs:
  test:
    name: Run Tests and Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: endless-gaming-frontend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting (if available)
      run: |
        if npm run lint --if-present > /dev/null 2>&1; then
          npm run lint
        else
          echo "No lint script found, skipping linting"
        fi
      continue-on-error: true
      
    - name: Run type checking
      run: |
        # Angular projects have TypeScript compilation as part of build
        npm run build -- --configuration development
        echo "‚úÖ TypeScript compilation successful"
      
    - name: Run unit tests with coverage
      run: npm test -- --code-coverage --browsers=ChromeHeadlessNoSandbox
      env:
        CHROME_BIN: /usr/bin/google-chrome-stable
        
    - name: Upload test results and coverage
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: frontend-test-results
        path: |
          endless-gaming-frontend/coverage/
          endless-gaming-frontend/test-results/
        retention-days: 7

  build:
    name: Build Production Bundle
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: endless-gaming-frontend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build production bundle
      run: npm run build
      
    - name: Check bundle size
      run: |
        # Check if build output exists and report size
        if [ -d "dist" ]; then
          echo "üì¶ Build successful! Bundle size:"
          du -sh dist/
          find dist/ -name "*.js" -exec basename {} \; | head -10
        else
          echo "‚ùå Build failed - no dist directory found"
          exit 1
        fi
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build-artifacts
        path: endless-gaming-frontend/dist/
        retention-days: 7

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: endless-gaming-frontend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run npm audit
      run: |
        # Run npm audit and capture results
        npm audit --audit-level high || echo "‚ö†Ô∏è Security vulnerabilities found - review required"
      continue-on-error: true
      
    - name: Check for known vulnerabilities
      run: |
        # Additional security checks could go here
        echo "üîê Security audit completed"

  dependency-check:
    name: Dependency Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: endless-gaming-frontend/package-lock.json
        
    - name: Analyze dependencies
      run: |
        echo "üìã Package.json analysis:"
        echo "Production dependencies:"
        npm list --depth=0 --production || true
        echo ""
        echo "Development dependencies:"
        npm list --depth=0 --only=dev || true
        echo ""
        echo "Outdated packages:"
        npm outdated || echo "All packages up to date"

  # Optional: Deploy job for frontend
  deploy-ready:
    name: Deployment Ready Check
    runs-on: ubuntu-latest
    needs: [test, build, security-audit]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deployment status
      run: |
        echo "‚úÖ Frontend CI/CD pipeline completed successfully!"
        echo "üöÄ Ready for deployment to production"
        echo "üìù Next steps:"
        echo "   - Configure deployment target (Netlify, Vercel, AWS S3, etc.)"
        echo "   - Set up environment-specific configuration"
        echo "   - Configure production API endpoints"